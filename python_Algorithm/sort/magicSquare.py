# 마방진 (가로, 세로, 대각선 방향의 숫자 합계가 모두 같은 배열) 만들기
# 최초의 '1'이 채워지는 자리는 첫 줄 정 가운데 열이다 => 홀수차 정방행렬(행과 열의 개수가 같은 행렬) 만 가능하다
# 직전에 채워진 숫자의 값에 따라서 다음에 채워질 숫자의 위치가 결정된다
# 직전에 채워진 숫자가 행렬의 차수(n)의 배수면 다음 숫자는 아래줄에 채운다 => 행 +1
# 직전에 채워진 숫자가 n의 배수가 아니면 다음 숫자는 오른쪽 위 방향으로 채운다 => 행 -1, 열 +1
# 행이 0보다 작아지면 행의 위치를 마지막 위치로 변경한 후 채우고 열이 행렬의 차수와 같아지면 열의 위치를 0으로 변경한다
import numpy as np
while True:
    n = int(input('Map 크기 n을 입력하세요: '))
    if n >=3 and n%2==1:
        break
    else:
        print('숫자를 다시 입력하세요(3이상의 홀수)')
# n =5
map = [list(0 for _ in range(n)) for _ in range(n)]
x, y = 0, n//2
for i in range(1,n*n+1):
    map[x][y]=i

    if i%n==0:
        x +=1
    else:
        x-=1
        if x < 0:
            x = n - 1
        y+=1
        if y >= n:
            y = 0

print(np.array(map))